import java.io.*;
import java.util.*;
import java.net.*;
public class Server {
    public static Hashtable<String, Integer> items = new Hashtable<String, Integer>();
    public static boolean tcpOn = true;
    
  public static void main (String[] args) {
    int tcpPort;
    int udpPort;
    if (args.length != 3) {
      System.out.println("ERROR: Provide 3 arguments");
      System.out.println("\t(1) <tcpPort>: the port number for TCP connection");
      System.out.println("\t(2) <udpPort>: the port number for UDP connection");
      System.out.println("\t(3) <file>: the file of inventory");
      System.exit(-1);
    }
    tcpPort = Integer.parseInt(args[0]);
    udpPort = Integer.parseInt(args[1]);
    String fileName = args[2];

 // This will reference one line at a time
    String line = null;
    String[] item = new String[2];
    String inventory = "inventory.txt";
//initialize UDP
    DatagramPacket datapacket, returnpacket;
    try {
    	DatagramSocket datasocket = new DatagramSocket (udpPort);
    	int len = 65507;
    	byte[] buf = new byte[len];
        while (true) {
          try {
        		  datapacket = new DatagramPacket (buf, buf.length); 
        		  datasocket.receive (datapacket);
        		  String message = new String(datapacket.getData());
        		  InetAddress sender=datapacket.getAddress();
        		  int senderPort=datapacket.getPort();
        		  
        		  
        		  String sendMsg="adadssda";
        		  byte[] sendMsgBytes=sendMsg.getBytes();
        		  DatagramPacket sendPack=new DatagramPacket(sendMsgBytes, sendMsgBytes.length, sender, senderPort);
        		  datasocket.send(sendPack);
        		  
        		  
        		  
        		  
        		  
        		  returnpacket = new DatagramPacket (datapacket.getData(), 
        				  datapacket.getLength(),
        				  datapacket.getAddress(),
        				  datapacket.getPort()); 
        		  datasocket.send(returnpacket);
                 } catch (IOException e) {
                	 System.err.println (e); 
               } 
        	}
        }
          catch (SocketException se) {
            	System.err.println (se ); 
          }
//initialize TCP 
    try {
        FileReader fileReader = 
            new FileReader(inventory);

        BufferedReader bufferedReader = 
            new BufferedReader(fileReader);

        while((line = bufferedReader.readLine()) != null) {
        	line = line.trim();
        	item = line.split(" ");
        	if(item.length == 2)
        		items.put(item[0], Integer.valueOf(item[1]));
        }   
        bufferedReader.close();         
    }
    catch(FileNotFoundException ex) {
        System.out.println(
            "Unable to open file '" + inventory + "'");                
    }
    catch(IOException ex) {
        System.out.println(
            "Error reading file '" + inventory + "'");                  
    }
    // parse the inventory file

	try {
		int port = tcpPort;
		if(!tcpOn)
			port = udpPort;		
		ServerSocket listener = new ServerSocket(port);
		Socket s;
		while ( (s = listener.accept()) != null) {
			Thread t = new MultithreadedServer(s);
			t.start();
		}
	} catch (IOException e) {
		System.err.println("Server aborted:" + e);
	}
  }

}
