import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.Socket;
import java.util.Hashtable;

public class MultithreadedServer extends Thread{
	Socket theClient;
	private static Hashtable<String, Integer> items = Server.items;
	private static boolean tcpOn = Server.tcpOn;
    public MultithreadedServer(Socket s){
    	theClient = s;	
    }
    public void run(){
  	  try{
  		InputStream input = theClient.getInputStream();
		  OutputStream output = theClient.getOutputStream();
		  PrintStream printStream = new PrintStream(output);
		  InputStreamReader inputStream = new InputStreamReader(input);
		  BufferedReader bufferedReader = new BufferedReader(inputStream);
		  String message = null;
		  message=bufferedReader.readLine();
  		  while(message!=null){
  			  String response=processMessage(message);
  			  printStream.println(response);
    		  message = bufferedReader.readLine();
  		  }
  		  
  		  //implement methods that take the input of the message
  		  
  	  }
  	  catch(Exception e){
  		  System.err.println(e);
  	  }
    }
    private String processMessage(String s){
    	
    	return s;
    }
    public synchronized void increaseInventory(String product){
  	  int count = items.get(product);
  	  count++;
  	  items.put(product, count);
    }
    public synchronized void decreaseInventory(String product){
  	  int count = items.get(product);
  	  count--;
  	  items.put(product, count);
    }
    public synchronized void changePort(){
  	  if(!tcpOn)
  		  tcpOn = true;
  	  else
  		  tcpOn = false;
    }
}
